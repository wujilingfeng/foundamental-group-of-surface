  main.cpp
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\OpenGL_shader.cpp(114): warning C4244: “参数”: 从“__int64”转换到“GLint”，可能丢失数据
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(16): warning C4838: 从“double”转换到“const float”需要收缩转换
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(16): warning C4305: “初始化”: 从“double”到“const float”截断
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(17): warning C4838: 从“double”转换到“const float”需要收缩转换
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(17): warning C4305: “初始化”: 从“double”到“const float”截断
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(18): warning C4838: 从“double”转换到“const float”需要收缩转换
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(18): warning C4305: “初始化”: 从“double”到“const float”截断
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(23): warning C4838: 从“double”转换到“const float”需要收缩转换
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(23): warning C4305: “初始化”: 从“double”到“const float”截断
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(24): warning C4838: 从“double”转换到“const float”需要收缩转换
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(24): warning C4305: “初始化”: 从“double”到“const float”截断
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(25): warning C4838: 从“double”转换到“const float”需要收缩转换
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(25): warning C4305: “初始化”: 从“double”到“const float”截断
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(26): warning C4838: 从“double”转换到“const float”需要收缩转换
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(26): warning C4305: “初始化”: 从“double”到“const float”截断
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(39): warning C4838: 从“double”转换到“const float”需要收缩转换
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(39): warning C4305: “初始化”: 从“double”到“const float”截断
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(40): warning C4838: 从“double”转换到“const float”需要收缩转换
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(40): warning C4305: “初始化”: 从“double”到“const float”截断
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(43): warning C4838: 从“double”转换到“const float”需要收缩转换
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(43): warning C4305: “初始化”: 从“double”到“const float”截断
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(44): warning C4838: 从“double”转换到“const float”需要收缩转换
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(44): warning C4305: “初始化”: 从“double”到“const float”截断
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(45): warning C4838: 从“double”转换到“const float”需要收缩转换
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(45): warning C4305: “初始化”: 从“double”到“const float”截断
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(47): warning C4305: “参数”: 从“double”到“const float”截断
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(48): warning C4305: “参数”: 从“double”到“const float”截断
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(49): warning C4305: “参数”: 从“double”到“const float”截断
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(50): warning C4305: “参数”: 从“double”到“const float”截断
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(51): warning C4305: “参数”: 从“double”到“const float”截断
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(52): warning C4305: “参数”: 从“double”到“const float”截断
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(54): warning C4305: “参数”: 从“double”到“const float”截断
d:\Documents\VisualStudio2017\Projects\mytest\include\igl/material_colors.h(55): warning C4305: “参数”: 从“double”到“const float”截断
d:\documents\visualstudio2017\projects\mytest\include\igl\internal_angles.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
d:\documents\visualstudio2017\projects\mytest\include\igl\internal_angles.h : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerData.cpp(237): warning C4244: “初始化”: 从“__int64”转换到“int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerData.cpp(286): warning C4244: “初始化”: 从“__int64”转换到“int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerData.cpp(307): warning C4244: “初始化”: 从“__int64”转换到“int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\OpenGL_state.cpp(233): warning C4244: “=”: 从“__int64”转换到“int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\OpenGL_state.cpp(234): warning C4244: “=”: 从“__int64”转换到“int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\OpenGL_state.cpp(347): warning C4244: “参数”: 从“__int64”转换到“GLsizei”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\OpenGL_state.cpp(355): warning C4244: “参数”: 从“__int64”转换到“GLsizei”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\OpenGL_state.cpp(360): warning C4244: “参数”: 从“__int64”转换到“GLsizei”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\TextRenderer.cpp(85): warning C4244: “参数”: 从“double”转换到“const float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerCore.cpp(32): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerCore.cpp(66): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerCore.cpp(83): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerCore.cpp(121): warning C4244: “参数”: 从“float”转换到“GLsizei”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerCore.cpp(121): warning C4244: “参数”: 从“float”转换到“GLint”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerCore.cpp(139): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerCore.cpp(144): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerCore.cpp(145): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerCore.cpp(224): warning C4244: “参数”: 从“__int64”转换到“const double”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerCore.cpp(299): warning C4244: “初始化”: 从“__int64”转换到“unsigned int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerCore.cpp(300): warning C4244: “初始化”: 从“__int64”转换到“unsigned int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerCore.cpp(336): warning C4244: “参数”: 从“unsigned int”转换到“const float”，可能丢失数据
d:\Documents\VisualStudio2017\Projects\mytest\external\nanogui\include\nanogui/layout.h(275): warning C4996: '_snprintf': This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(1959): note: 参见“_snprintf”的声明
d:\documents\visualstudio2017\projects\mytest\include\igl\writeOFF.cpp(70): warning C4003: “RGB”宏的实参不足
d:\documents\visualstudio2017\projects\mytest\include\igl\EPS.h(16): warning C4305: “初始化”: 从“double”到“float”截断
d:\documents\visualstudio2017\projects\mytest\include\igl\EPS.h(17): warning C4305: “初始化”: 从“double”到“float”截断
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(154): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(155): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(171): warning C4244: “参数”: 从“double”转换到“int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(185): warning C4244: “参数”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(611): warning C4244: “参数”: 从“__int64”转换到“const double”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(616): warning C4244: “参数”: 从“double”转换到“const float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(709): warning C4244: “参数”: 从“float”转换到“const int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(724): warning C4244: “参数”: 从“int”转换到“const float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(725): warning C4244: “参数”: 从“int”转换到“const float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(763): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(851): warning C4244: “参数”: 从“double”转换到“int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(859): warning C4244: “参数”: 从“int”转换到“const float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(917): warning C4244: “参数”: 从“float”转换到“int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(70): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(108): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(108): warning C4996: 'OpenMesh::Iterators::GenericIteratorT<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel,{&OpenMesh::ArrayKernel::has_vertex_status,0},{&OpenMesh::ArrayKernel::[thunk]: __cdecl OpenMesh::ArrayKernel::`vcall'{8,{flat}}' }',0}>::operator OpenMesh::VertexHandle': Implicit casts of iterators are unsafe. Use dereferencing operators -> and * instead.
  d:\Documents\VisualStudio2017\Projects\mytest\openmesh6.3(64)\OpenMesh 6.3\include\OpenMesh/Core/Mesh/IteratorsT.hh(144): note: 参见“OpenMesh::Iterators::GenericIteratorT<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel,{&OpenMesh::ArrayKernel::has_vertex_status,0},{&OpenMesh::ArrayKernel::[thunk]: __cdecl OpenMesh::ArrayKernel::`vcall'{8,{flat}}' }',0}>::operator OpenMesh::VertexHandle”的声明
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(124): warning C4996: 'OpenMesh::Iterators::GenericIteratorT<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::EdgeHandle,OpenMesh::ArrayKernel,{&OpenMesh::ArrayKernel::has_edge_status,0},{&OpenMesh::ArrayKernel::[thunk]: __cdecl OpenMesh::ArrayKernel::`vcall'{24,{flat}}' }',0}>::operator OpenMesh::EdgeHandle': Implicit casts of iterators are unsafe. Use dereferencing operators -> and * instead.
  d:\Documents\VisualStudio2017\Projects\mytest\openmesh6.3(64)\OpenMesh 6.3\include\OpenMesh/Core/Mesh/IteratorsT.hh(144): note: 参见“OpenMesh::Iterators::GenericIteratorT<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::EdgeHandle,OpenMesh::ArrayKernel,{&OpenMesh::ArrayKernel::has_edge_status,0},{&OpenMesh::ArrayKernel::[thunk]: __cdecl OpenMesh::ArrayKernel::`vcall'{24,{flat}}' }',0}>::operator OpenMesh::EdgeHandle”的声明
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(125): warning C4996: 'OpenMesh::Iterators::GenericIteratorT<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::EdgeHandle,OpenMesh::ArrayKernel,{&OpenMesh::ArrayKernel::has_edge_status,0},{&OpenMesh::ArrayKernel::[thunk]: __cdecl OpenMesh::ArrayKernel::`vcall'{24,{flat}}' }',0}>::operator OpenMesh::EdgeHandle': Implicit casts of iterators are unsafe. Use dereferencing operators -> and * instead.
  d:\Documents\VisualStudio2017\Projects\mytest\openmesh6.3(64)\OpenMesh 6.3\include\OpenMesh/Core/Mesh/IteratorsT.hh(144): note: 参见“OpenMesh::Iterators::GenericIteratorT<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::EdgeHandle,OpenMesh::ArrayKernel,{&OpenMesh::ArrayKernel::has_edge_status,0},{&OpenMesh::ArrayKernel::[thunk]: __cdecl OpenMesh::ArrayKernel::`vcall'{24,{flat}}' }',0}>::operator OpenMesh::EdgeHandle”的声明
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(185): warning C4996: 'OpenMesh::Iterators::GenericCirculatorT_DEPRECATED<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle OpenMesh::Iterators::GenericCirculatorBaseT<OpenMesh::PolyConnectivity::This>::toVertexHandle(void) const>::operator OpenMesh::VertexHandle': Implicit casts of iterators are unsafe. Use dereferencing operators -> and * instead.
  d:\Documents\VisualStudio2017\Projects\mytest\openmesh6.3(64)\OpenMesh 6.3\include\OpenMesh/Core/Mesh/CirculatorsT.hh(582): note: 参见“OpenMesh::Iterators::GenericCirculatorT_DEPRECATED<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle OpenMesh::Iterators::GenericCirculatorBaseT<OpenMesh::PolyConnectivity::This>::toVertexHandle(void) const>::operator OpenMesh::VertexHandle”的声明
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(187): warning C4996: 'OpenMesh::Iterators::GenericCirculatorT_DEPRECATED<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle OpenMesh::Iterators::GenericCirculatorBaseT<OpenMesh::PolyConnectivity::This>::toVertexHandle(void) const>::operator OpenMesh::VertexHandle': Implicit casts of iterators are unsafe. Use dereferencing operators -> and * instead.
  d:\Documents\VisualStudio2017\Projects\mytest\openmesh6.3(64)\OpenMesh 6.3\include\OpenMesh/Core/Mesh/CirculatorsT.hh(582): note: 参见“OpenMesh::Iterators::GenericCirculatorT_DEPRECATED<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle OpenMesh::Iterators::GenericCirculatorBaseT<OpenMesh::PolyConnectivity::This>::toVertexHandle(void) const>::operator OpenMesh::VertexHandle”的声明
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(189): warning C4996: 'OpenMesh::Iterators::GenericCirculatorT_DEPRECATED<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle OpenMesh::Iterators::GenericCirculatorBaseT<OpenMesh::PolyConnectivity::This>::toVertexHandle(void) const>::operator OpenMesh::VertexHandle': Implicit casts of iterators are unsafe. Use dereferencing operators -> and * instead.
  d:\Documents\VisualStudio2017\Projects\mytest\openmesh6.3(64)\OpenMesh 6.3\include\OpenMesh/Core/Mesh/CirculatorsT.hh(582): note: 参见“OpenMesh::Iterators::GenericCirculatorT_DEPRECATED<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle OpenMesh::Iterators::GenericCirculatorBaseT<OpenMesh::PolyConnectivity::This>::toVertexHandle(void) const>::operator OpenMesh::VertexHandle”的声明
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(203): warning C4996: 'OpenMesh::Iterators::GenericIteratorT<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel,{&OpenMesh::ArrayKernel::has_vertex_status,0},{&OpenMesh::ArrayKernel::[thunk]: __cdecl OpenMesh::ArrayKernel::`vcall'{8,{flat}}' }',0}>::operator OpenMesh::VertexHandle': Implicit casts of iterators are unsafe. Use dereferencing operators -> and * instead.
  d:\Documents\VisualStudio2017\Projects\mytest\openmesh6.3(64)\OpenMesh 6.3\include\OpenMesh/Core/Mesh/IteratorsT.hh(144): note: 参见“OpenMesh::Iterators::GenericIteratorT<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel,{&OpenMesh::ArrayKernel::has_vertex_status,0},{&OpenMesh::ArrayKernel::[thunk]: __cdecl OpenMesh::ArrayKernel::`vcall'{8,{flat}}' }',0}>::operator OpenMesh::VertexHandle”的声明
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(206): warning C4996: 'OpenMesh::Iterators::GenericCirculatorT_DEPRECATED<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle OpenMesh::Iterators::GenericCirculatorBaseT<OpenMesh::PolyConnectivity::This>::toVertexHandle(void) const>::operator OpenMesh::VertexHandle': Implicit casts of iterators are unsafe. Use dereferencing operators -> and * instead.
  d:\Documents\VisualStudio2017\Projects\mytest\openmesh6.3(64)\OpenMesh 6.3\include\OpenMesh/Core/Mesh/CirculatorsT.hh(582): note: 参见“OpenMesh::Iterators::GenericCirculatorT_DEPRECATED<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle OpenMesh::Iterators::GenericCirculatorBaseT<OpenMesh::PolyConnectivity::This>::toVertexHandle(void) const>::operator OpenMesh::VertexHandle”的声明
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(210): warning C4996: 'OpenMesh::Iterators::GenericCirculatorT_DEPRECATED<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle OpenMesh::Iterators::GenericCirculatorBaseT<OpenMesh::PolyConnectivity::This>::toVertexHandle(void) const>::operator OpenMesh::VertexHandle': Implicit casts of iterators are unsafe. Use dereferencing operators -> and * instead.
  d:\Documents\VisualStudio2017\Projects\mytest\openmesh6.3(64)\OpenMesh 6.3\include\OpenMesh/Core/Mesh/CirculatorsT.hh(582): note: 参见“OpenMesh::Iterators::GenericCirculatorT_DEPRECATED<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle OpenMesh::Iterators::GenericCirculatorBaseT<OpenMesh::PolyConnectivity::This>::toVertexHandle(void) const>::operator OpenMesh::VertexHandle”的声明
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(217): warning C4996: 'OpenMesh::Iterators::GenericCirculatorT_DEPRECATED<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle OpenMesh::Iterators::GenericCirculatorBaseT<OpenMesh::PolyConnectivity::This>::toVertexHandle(void) const>::operator OpenMesh::VertexHandle': Implicit casts of iterators are unsafe. Use dereferencing operators -> and * instead.
  d:\Documents\VisualStudio2017\Projects\mytest\openmesh6.3(64)\OpenMesh 6.3\include\OpenMesh/Core/Mesh/CirculatorsT.hh(582): note: 参见“OpenMesh::Iterators::GenericCirculatorT_DEPRECATED<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle OpenMesh::Iterators::GenericCirculatorBaseT<OpenMesh::PolyConnectivity::This>::toVertexHandle(void) const>::operator OpenMesh::VertexHandle”的声明
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(222): warning C4996: 'OpenMesh::Iterators::GenericCirculatorT_DEPRECATED<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle OpenMesh::Iterators::GenericCirculatorBaseT<OpenMesh::PolyConnectivity::This>::toVertexHandle(void) const>::operator OpenMesh::VertexHandle': Implicit casts of iterators are unsafe. Use dereferencing operators -> and * instead.
  d:\Documents\VisualStudio2017\Projects\mytest\openmesh6.3(64)\OpenMesh 6.3\include\OpenMesh/Core/Mesh/CirculatorsT.hh(582): note: 参见“OpenMesh::Iterators::GenericCirculatorT_DEPRECATED<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle OpenMesh::Iterators::GenericCirculatorBaseT<OpenMesh::PolyConnectivity::This>::toVertexHandle(void) const>::operator OpenMesh::VertexHandle”的声明
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(228): warning C4996: 'OpenMesh::Iterators::GenericCirculatorT_DEPRECATED<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle OpenMesh::Iterators::GenericCirculatorBaseT<OpenMesh::PolyConnectivity::This>::toVertexHandle(void) const>::operator OpenMesh::VertexHandle': Implicit casts of iterators are unsafe. Use dereferencing operators -> and * instead.
  d:\Documents\VisualStudio2017\Projects\mytest\openmesh6.3(64)\OpenMesh 6.3\include\OpenMesh/Core/Mesh/CirculatorsT.hh(582): note: 参见“OpenMesh::Iterators::GenericCirculatorT_DEPRECATED<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle OpenMesh::Iterators::GenericCirculatorBaseT<OpenMesh::PolyConnectivity::This>::toVertexHandle(void) const>::operator OpenMesh::VertexHandle”的声明
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(233): warning C4996: 'OpenMesh::Iterators::GenericCirculatorT_DEPRECATED<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle OpenMesh::Iterators::GenericCirculatorBaseT<OpenMesh::PolyConnectivity::This>::toVertexHandle(void) const>::operator OpenMesh::VertexHandle': Implicit casts of iterators are unsafe. Use dereferencing operators -> and * instead.
  d:\Documents\VisualStudio2017\Projects\mytest\openmesh6.3(64)\OpenMesh 6.3\include\OpenMesh/Core/Mesh/CirculatorsT.hh(582): note: 参见“OpenMesh::Iterators::GenericCirculatorT_DEPRECATED<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel::VertexHandle OpenMesh::Iterators::GenericCirculatorBaseT<OpenMesh::PolyConnectivity::This>::toVertexHandle(void) const>::operator OpenMesh::VertexHandle”的声明
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(244): warning C4996: 'OpenMesh::Iterators::GenericIteratorT<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel,{&OpenMesh::ArrayKernel::has_vertex_status,0},{&OpenMesh::ArrayKernel::[thunk]: __cdecl OpenMesh::ArrayKernel::`vcall'{8,{flat}}' }',0}>::operator OpenMesh::VertexHandle': Implicit casts of iterators are unsafe. Use dereferencing operators -> and * instead.
  d:\Documents\VisualStudio2017\Projects\mytest\openmesh6.3(64)\OpenMesh 6.3\include\OpenMesh/Core/Mesh/IteratorsT.hh(144): note: 参见“OpenMesh::Iterators::GenericIteratorT<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel,{&OpenMesh::ArrayKernel::has_vertex_status,0},{&OpenMesh::ArrayKernel::[thunk]: __cdecl OpenMesh::ArrayKernel::`vcall'{8,{flat}}' }',0}>::operator OpenMesh::VertexHandle”的声明
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(249): warning C4996: 'OpenMesh::Iterators::GenericIteratorT<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel,{&OpenMesh::ArrayKernel::has_vertex_status,0},{&OpenMesh::ArrayKernel::[thunk]: __cdecl OpenMesh::ArrayKernel::`vcall'{8,{flat}}' }',0}>::operator OpenMesh::VertexHandle': Implicit casts of iterators are unsafe. Use dereferencing operators -> and * instead.
  d:\Documents\VisualStudio2017\Projects\mytest\openmesh6.3(64)\OpenMesh 6.3\include\OpenMesh/Core/Mesh/IteratorsT.hh(144): note: 参见“OpenMesh::Iterators::GenericIteratorT<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel,{&OpenMesh::ArrayKernel::has_vertex_status,0},{&OpenMesh::ArrayKernel::[thunk]: __cdecl OpenMesh::ArrayKernel::`vcall'{8,{flat}}' }',0}>::operator OpenMesh::VertexHandle”的声明
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(254): warning C4996: 'OpenMesh::Iterators::GenericIteratorT<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel,{&OpenMesh::ArrayKernel::has_vertex_status,0},{&OpenMesh::ArrayKernel::[thunk]: __cdecl OpenMesh::ArrayKernel::`vcall'{8,{flat}}' }',0}>::operator OpenMesh::VertexHandle': Implicit casts of iterators are unsafe. Use dereferencing operators -> and * instead.
  d:\Documents\VisualStudio2017\Projects\mytest\openmesh6.3(64)\OpenMesh 6.3\include\OpenMesh/Core/Mesh/IteratorsT.hh(144): note: 参见“OpenMesh::Iterators::GenericIteratorT<OpenMesh::PolyConnectivity::This,OpenMesh::ArrayKernel::VertexHandle,OpenMesh::ArrayKernel,{&OpenMesh::ArrayKernel::has_vertex_status,0},{&OpenMesh::ArrayKernel::[thunk]: __cdecl OpenMesh::ArrayKernel::`vcall'{8,{flat}}' }',0}>::operator OpenMesh::VertexHandle”的声明
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(386): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(441): warning C4244: “=”: 从“int”转换到“float”，可能丢失数据
E:\spetra\spectra\include\SymEigsSolver.h(365): warning C4244: “参数”: 从“__int64”转换到“int”，可能丢失数据
  E:\spetra\spectra\include\SymEigsSolver.h(360): note: 编译 类 模板 成员函数 "void Spectra::SymEigsSolver<double,3,Spectra::DenseSymMatProd<double,1>>::retrieve_ritzpair(void)" 时
  E:\spetra\spectra\include\SymEigsSolver.h(587): note: 参见对正在编译的函数 模板 实例化“void Spectra::SymEigsSolver<double,3,Spectra::DenseSymMatProd<double,1>>::retrieve_ritzpair(void)”的引用
  d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(94): note: 参见对正在编译的 类 模板 实例化 "Spectra::SymEigsSolver<double,3,Spectra::DenseSymMatProd<double,1>>" 的引用
e:\spetra\spectra\include\MatOp/DenseSymMatProd.h(52): warning C4244: “return”: 从“__int64”转换到“int”，可能丢失数据
  e:\spetra\spectra\include\MatOp/DenseSymMatProd.h(52): note: 编译 类 模板 成员函数 "int Spectra::DenseSymMatProd<double,1>::rows(void) const" 时
  E:\spetra\spectra\include\SymEigsSolver.h(482): note: 参见对正在编译的函数 模板 实例化“int Spectra::DenseSymMatProd<double,1>::rows(void) const”的引用
  d:\documents\visualstudio2017\projects\mytest\shortest way\shortest.h(93): note: 参见对正在编译的 类 模板 实例化 "Spectra::DenseSymMatProd<double,1>" 的引用
d:\documents\visualstudio2017\projects\mytest\include\igl\ortho.cpp(21): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
  d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerCore.cpp(140): note: 参见对正在编译的函数 模板 实例化“void igl::ortho<Eigen::Matrix<float,4,4,0,4,4>>(const float,const float,const float,const float,const float,const float,Eigen::PlainObjectBase<Eigen::Matrix<float,4,4,0,4,4>> &)”的引用
d:\documents\visualstudio2017\projects\mytest\include\igl\ortho.cpp(22): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\ortho.cpp(23): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\frustum.cpp(20): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
  d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerCore.cpp(146): note: 参见对正在编译的函数 模板 实例化“void igl::frustum<Eigen::Matrix<float,4,4,0,4,4>>(const float,const float,const float,const float,const float,const float,Eigen::PlainObjectBase<Eigen::Matrix<float,4,4,0,4,4>> &)”的引用
d:\documents\visualstudio2017\projects\mytest\include\igl\frustum.cpp(21): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\frustum.cpp(26): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\writeOBJ.cpp(33): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(207): note: 参见“fopen”的声明
  d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(469): note: 参见对正在编译的函数 模板 实例化“bool igl::writeOBJ<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const std::string,const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)”的引用
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
d:\documents\visualstudio2017\projects\mytest\include\igl\two_axis_valuator_fixed_up.cpp(28): warning C4244: “参数”: 从“double”转换到“const float”，可能丢失数据
  d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(713): note: 参见对正在编译的函数 模板 实例化“void igl::two_axis_valuator_fixed_up<float,float>(const int,const int,const double,const Eigen::Quaternion<float,0> &,const int,const int,const int,const int,Eigen::Quaternion<float,0> &)”的引用
d:\documents\visualstudio2017\projects\mytest\include\igl\two_axis_valuator_fixed_up.cpp(38): warning C4244: “参数”: 从“double”转换到“const float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\snap_to_canonical_view_quat.cpp(106): warning C4244: “参数”: 从“const double”转换到“const float”，可能丢失数据
  d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(869): note: 参见对正在编译的函数 模板 实例化“bool igl::snap_to_canonical_view_quat<float,float>(const Eigen::Quaternion<float,0> &,const double,Eigen::Quaternion<float,0> &)”的引用
d:\documents\visualstudio2017\projects\mytest\include\igl\per_face_normals.cpp(21): warning C4244: “初始化”: 从“__int64”转换到“int”，可能丢失数据
  d:\documents\visualstudio2017\projects\mytest\include\igl\per_face_normals.cpp(47): note: 参见对正在编译的函数 模板 实例化“void igl::per_face_normals<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,3,1,0,3,1>,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,const Eigen::MatrixBase<Eigen::Matrix<double,3,1,0,3,1>> &,Eigen::PlainObjectBase<Derived> &)”的引用
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
  d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerData.cpp(342): note: 参见对正在编译的函数 模板 实例化“void igl::per_face_normals<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Derived> &)”的引用
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
d:\documents\visualstudio2017\projects\mytest\include\igl\readOFF.cpp(20): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(207): note: 参见“fopen”的声明
  d:\documents\visualstudio2017\projects\mytest\include\igl\readOFF.cpp(177): note: 参见对正在编译的函数 模板 实例化“bool igl::readOFF<double,int>(const std::string,std::vector<std::vector<double,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &)”的引用
          with
          [
              _Ty=double
          ]
  d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(388): note: 参见对正在编译的函数 模板 实例化“bool igl::readOFF<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const std::string,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)”的引用
d:\documents\visualstudio2017\projects\mytest\include\igl\list_to_matrix.cpp(22): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
  d:\documents\visualstudio2017\projects\mytest\include\igl\readOFF.cpp(184): note: 参见对正在编译的函数 模板 实例化“bool igl::list_to_matrix<double,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const std::vector<std::vector<double,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &)”的引用
          with
          [
              _Ty=double
          ]
d:\documents\visualstudio2017\projects\mytest\include\igl\readOBJ.cpp(31): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(207): note: 参见“fopen”的声明
  d:\documents\visualstudio2017\projects\mytest\include\igl\readOBJ.cpp(261): note: 参见对正在编译的函数 模板 实例化“bool igl::readOBJ<double,int>(const std::string,std::vector<std::vector<double,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &)”的引用
          with
          [
              _Ty=double
          ]
  d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(405): note: 参见对正在编译的函数 模板 实例化“bool igl::readOBJ<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const std::string,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)”的引用
d:\documents\visualstudio2017\projects\mytest\include\igl\trackball.cpp(121): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
  d:\documents\visualstudio2017\projects\mytest\include\igl\trackball.cpp(157): note: 参见对正在编译的函数 模板 实例化“void igl::trackball<Scalarquat>(const double,const double,const Q_type,const Q_type *,const double,const double,const double,const double,Q_type *)”的引用
          with
          [
              Scalarquat=float,
              Q_type=float
          ]
  d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(705): note: 参见对正在编译的函数 模板 实例化“void igl::trackball<float,float>(const double,const double,const double,const Eigen::Quaternion<float,0> &,const double,const double,const double,const double,Eigen::Quaternion<float,0> &)”的引用
d:\documents\visualstudio2017\projects\mytest\include\igl\trackball.cpp(122): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\trackball.cpp(123): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\trackball.cpp(124): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\trackball.cpp(128): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\trackball.cpp(129): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\trackball.cpp(130): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\trackball.cpp(131): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\unproject.cpp(36): warning C4244: “初始化”: 从“__int64”转换到“int”，可能丢失数据
  d:\documents\visualstudio2017\projects\mytest\include\igl\unproject.cpp(65): note: 参见对正在编译的函数 模板 实例化“void igl::unproject<Derived,Eigen::Matrix<float,4,4,0,4,4>,Eigen::Matrix<float,4,4,0,4,4>,Eigen::Matrix<float,4,1,0,4,1>,Eigen::Matrix<float,3,1,0,3,1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<float,4,4,0,4,4>> &,const Eigen::MatrixBase<Eigen::Matrix<float,4,4,0,4,4>> &,const Eigen::MatrixBase<Eigen::Matrix<float,4,1,0,4,1>> &,Eigen::PlainObjectBase<Derived> &)”的引用
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(724): note: 参见对正在编译的函数 模板 实例化“Eigen::Matrix<float,3,1,0,3,1> igl::unproject<float>(const Eigen::Matrix<float,3,1,0,3,1> &,const Eigen::Matrix<float,4,4,0,4,4> &,const Eigen::Matrix<float,4,4,0,4,4> &,const Eigen::Matrix<float,4,1,0,4,1> &)”的引用
d:\documents\visualstudio2017\projects\mytest\include\igl\unproject.cpp(36): warning C4244: “初始化”: 从“__int64”转换到“const int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\snap_to_canonical_view_quat.cpp(48): warning C4305: “初始化”: 从“double”到“float”截断
  d:\documents\visualstudio2017\projects\mytest\include\igl\snap_to_canonical_view_quat.cpp(106): note: 参见对正在编译的函数 模板 实例化“bool igl::snap_to_canonical_view_quat<Scalars>(const Q_type *,const Q_type,Q_type *)”的引用
          with
          [
              Scalars=float,
              Q_type=float
          ]
  d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(869): note: 参见对正在编译的函数 模板 实例化“bool igl::snap_to_canonical_view_quat<float,float>(const Eigen::Quaternion<float,0> &,const double,Eigen::Quaternion<float,0> &)”的引用
d:\documents\visualstudio2017\projects\mytest\include\igl\snap_to_canonical_view_quat.cpp(64): warning C4244: “+=”: 从“double”转换到“float”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\snap_to_canonical_view_quat.cpp(92): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
d:\Documents\VisualStudio2017\Projects\mytest\external\nanogui\include\nanogui/textbox.h(270): warning C4996: '_snprintf': This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(1959): note: 参见“_snprintf”的声明
  d:\Documents\VisualStudio2017\Projects\mytest\external\nanogui\include\nanogui/textbox.h(267): note: 编译 类 模板 成员函数 "void nanogui::FloatBox<T>::setValue(Scalar)" 时
          with
          [
              T=float,
              Scalar=float
          ]
  d:\Documents\VisualStudio2017\Projects\mytest\external\nanogui\include\nanogui/formhelper.h(161): note: 参见对正在编译的函数 模板 实例化“void nanogui::FloatBox<T>::setValue(Scalar)”的引用
          with
          [
              T=float,
              Scalar=float
          ]
  d:\Documents\VisualStudio2017\Projects\mytest\external\nanogui\include\nanogui/formhelper.h(299): note: 参见对正在编译的 类 模板 实例化 "nanogui::FloatBox<T>" 的引用
          with
          [
              T=float
          ]
  d:\Documents\VisualStudio2017\Projects\mytest\external\nanogui\include\nanogui/formhelper.h(157): note: 参见对正在编译的 类 模板 实例化 "nanogui::detail::FormWidget<float,std::true_type>" 的引用
  d:\Documents\VisualStudio2017\Projects\mytest\external\nanogui\include\nanogui/formhelper.h(186): note: 参见对正在编译的函数 模板 实例化“nanogui::detail::FormWidget<float,std::true_type> *nanogui::FormHelper::addVariable<Type>(const std::string &,const std::function<void (const Type &)> &,const std::function<Type (void)> &,bool)”的引用
          with
          [
              Type=float
          ]
  d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\Viewer.cpp(230): note: 参见对正在编译的函数 模板 实例化“nanogui::detail::FormWidget<float,std::true_type> *nanogui::FormHelper::addVariable<float>(const std::string &,Type &,bool)”的引用
          with
          [
              Type=float
          ]
d:\documents\visualstudio2017\projects\mytest\include\igl\readOFF.cpp(48): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(1195): note: 参见“fscanf”的声明
  d:\documents\visualstudio2017\projects\mytest\include\igl\readOFF.cpp(26): note: 参见对正在编译的函数 模板 实例化“bool igl::readOFF<double,int>(FILE *,std::vector<std::vector<double,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &)”的引用
          with
          [
              _Ty=double
          ]
  d:\documents\visualstudio2017\projects\mytest\include\igl\readOFF.cpp(177): note: 参见对正在编译的函数 模板 实例化“bool igl::readOFF<double,int>(const std::string,std::vector<std::vector<double,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &)”的引用
          with
          [
              _Ty=double
          ]
d:\documents\visualstudio2017\projects\mytest\include\igl\readOFF.cpp(72): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(2261): note: 参见“sscanf”的声明
d:\documents\visualstudio2017\projects\mytest\include\igl\readOFF.cpp(85): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(2261): note: 参见“sscanf”的声明
d:\documents\visualstudio2017\projects\mytest\include\igl\readOFF.cpp(113): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(1195): note: 参见“fscanf”的声明
d:\documents\visualstudio2017\projects\mytest\include\igl\readOFF.cpp(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(1195): note: 参见“fscanf”的声明
d:\documents\visualstudio2017\projects\mytest\include\igl\readOFF.cpp(132): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(1195): note: 参见“fscanf”的声明
d:\documents\visualstudio2017\projects\mytest\include\igl\readOFF.cpp(140): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(1195): note: 参见“fscanf”的声明
d:\documents\visualstudio2017\projects\mytest\include\igl\readOFF.cpp(142): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(1195): note: 参见“fscanf”的声明
d:\documents\visualstudio2017\projects\mytest\include\igl\readOFF.cpp(150): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(1195): note: 参见“fscanf”的声明
d:\documents\visualstudio2017\projects\mytest\include\igl\readOFF.cpp(153): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(1195): note: 参见“fscanf”的声明
d:\documents\visualstudio2017\projects\mytest\include\igl\readOBJ.cpp(138): warning C4267: “return”: 从“size_t”转换到“int”，可能丢失数据
  d:\documents\visualstudio2017\projects\mytest\include\igl\readOBJ.cpp(38): note: 参见对正在编译的函数 模板 实例化“bool igl::readOBJ<double,int>(FILE *,std::vector<std::vector<double,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &)”的引用
          with
          [
              _Ty=double
          ]
  d:\documents\visualstudio2017\projects\mytest\include\igl\readOBJ.cpp(261): note: 参见对正在编译的函数 模板 实例化“bool igl::readOBJ<double,int>(const std::string,std::vector<std::vector<double,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &)”的引用
          with
          [
              _Ty=double
          ]
d:\documents\visualstudio2017\projects\mytest\include\igl\readOBJ.cpp(142): warning C4267: “return”: 从“size_t”转换到“int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\readOBJ.cpp(146): warning C4267: “return”: 从“size_t”转换到“int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\readOBJ.cpp(76): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(2261): note: 参见“sscanf”的声明
d:\documents\visualstudio2017\projects\mytest\include\igl\readOBJ.cpp(99): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(2261): note: 参见“sscanf”的声明
d:\documents\visualstudio2017\projects\mytest\include\igl\readOBJ.cpp(118): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(2261): note: 参见“sscanf”的声明
d:\documents\visualstudio2017\projects\mytest\include\igl\readOBJ.cpp(154): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(2261): note: 参见“sscanf”的声明
d:\documents\visualstudio2017\projects\mytest\include\igl\readOBJ.cpp(160): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(2261): note: 参见“sscanf”的声明
d:\documents\visualstudio2017\projects\mytest\include\igl\readOBJ.cpp(165): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(2261): note: 参见“sscanf”的声明
d:\documents\visualstudio2017\projects\mytest\include\igl\readOBJ.cpp(169): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(2261): note: 参见“sscanf”的声明
d:\documents\visualstudio2017\projects\mytest\include\igl\readOBJ.cpp(173): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h(2261): note: 参见“sscanf”的声明
d:\documents\visualstudio2017\projects\mytest\include\igl\doublearea.cpp(25): warning C4244: “初始化”: 从“__int64”转换到“int”，可能丢失数据
  d:\documents\visualstudio2017\projects\mytest\include\igl\per_vertex_normals.cpp(65): note: 参见对正在编译的函数 模板 实例化“void igl::doublearea<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,1,0,-1,1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,1,0,-1,1>> &)”的引用
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
  d:\documents\visualstudio2017\projects\mytest\include\igl\per_vertex_normals.cpp(119): note: 参见对正在编译的函数 模板 实例化“void igl::per_vertex_normals<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Derived,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,const igl::PerVertexNormalsWeightingType,const Eigen::MatrixBase<Derived> &,Eigen::PlainObjectBase<Derived> &)”的引用
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
  d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerData.cpp(343): note: 参见对正在编译的函数 模板 实例化“void igl::per_vertex_normals<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Derived,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,const Eigen::MatrixBase<Derived> &,Eigen::PlainObjectBase<Derived> &)”的引用
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
d:\documents\visualstudio2017\projects\mytest\include\igl\doublearea.cpp(25): warning C4244: “初始化”: 从“__int64”转换到“const int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\doublearea.cpp(53): warning C4267: “参数”: 从“size_t”转换到“const int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\doublearea.cpp(65): warning C4267: “参数”: 从“size_t”转换到“const int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\squared_edge_lengths.cpp(19): warning C4244: “初始化”: 从“__int64”转换到“int”，可能丢失数据
  d:\documents\visualstudio2017\projects\mytest\include\igl\internal_angles.cpp(30): note: 参见对正在编译的函数 模板 实例化“void igl::squared_edge_lengths<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Derived> &)”的引用
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
  d:\documents\visualstudio2017\projects\mytest\include\igl\per_vertex_normals.cpp(70): note: 参见对正在编译的函数 模板 实例化“void igl::internal_angles<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,3,0,-1,3>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,3,0,-1,3>> &)”的引用
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
d:\documents\visualstudio2017\projects\mytest\include\igl\squared_edge_lengths.cpp(19): warning C4244: “初始化”: 从“__int64”转换到“const int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\colormap.cpp(1358): warning C4244: “初始化”: 从“double”转换到“unsigned int”，可能丢失数据
  d:\documents\visualstudio2017\projects\mytest\include\igl\colormap.cpp(1383): note: 参见对正在编译的函数 模板 实例化“void color_from_palette<T>(const T,T &,T &,T &,double [][3])”的引用
          with
          [
              T=double
          ]
  d:\documents\visualstudio2017\projects\mytest\include\igl\colormap.cpp(1442): note: 参见对正在编译的函数 模板 实例化“void igl::colormap<double>(const T,T &,T &,T &,igl::ColorMapType)”的引用
          with
          [
              T=double
          ]
  d:\documents\visualstudio2017\projects\mytest\include\igl\colormap.cpp(1422): note: 参见对正在编译的函数 模板 实例化“void igl::colormap<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,const double,const double,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,igl::ColorMapType)”的引用
  d:\documents\visualstudio2017\projects\mytest\include\igl\parula.cpp(30): note: 参见对正在编译的函数 模板 实例化“void igl::colormap<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,const bool,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,igl::ColorMapType)”的引用
  d:\documents\visualstudio2017\projects\mytest\include\igl\viewer\ViewerData.cpp(107): note: 参见对正在编译的函数 模板 实例化“void igl::parula<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,const bool,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &)”的引用
d:\documents\visualstudio2017\projects\mytest\include\igl\colormap.cpp(1359): warning C4244: “初始化”: 从“double”转换到“unsigned int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\sort.cpp(29): warning C4244: “初始化”: 从“__int64”转换到“int”，可能丢失数据
  d:\documents\visualstudio2017\projects\mytest\include\igl\doublearea.cpp(162): note: 参见对正在编译的函数 模板 实例化“void igl::sort<Derived,Eigen::Matrix<double,-1,3,0,-1,3>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const Eigen::DenseBase<Derived> &,const int,const bool,Eigen::PlainObjectBase<Derived> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)”的引用
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
  d:\documents\visualstudio2017\projects\mytest\include\igl\doublearea.cpp(72): note: 参见对正在编译的函数 模板 实例化“void igl::doublearea<Derived,Eigen::Matrix<double,-1,1,0,-1,1>>(const Eigen::MatrixBase<Derived> &,const double,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,1,0,-1,1>> &)”的引用
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
d:\documents\visualstudio2017\projects\mytest\include\igl\sort.cpp(42): warning C4244: “初始化”: 从“__int64”转换到“int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\sort.cpp(73): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\sort.cpp(77): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\parallel_for.h(108): warning C4244: “参数”: 从“Index”转换到“const int”，可能丢失数据
  d:\documents\visualstudio2017\projects\mytest\include\igl\doublearea.cpp(199): note: 参见对正在编译的函数 模板 实例化“bool igl::parallel_for<Index,igl::doublearea::<lambda_a9d8f00405db682869825b60418d6c92>>(const Index,const FunctionType &,const ::size_t)”的引用
          with
          [
              Index=Index,
              FunctionType=igl::doublearea::<lambda_a9d8f00405db682869825b60418d6c92>
          ]
d:\documents\visualstudio2017\projects\mytest\include\igl\sort.cpp(166): warning C4244: “初始化”: 从“__int64”转换到“int”，可能丢失数据
  d:\documents\visualstudio2017\projects\mytest\include\igl\sort.cpp(36): note: 参见对正在编译的函数 模板 实例化“void igl::sort2<Derived,Eigen::Matrix<double,-1,3,0,-1,3>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const Eigen::DenseBase<Derived> &,const int,const bool,Eigen::PlainObjectBase<Derived> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)”的引用
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
  d:\documents\visualstudio2017\projects\mytest\include\igl\doublearea.cpp(162): note: 参见对正在编译的函数 模板 实例化“void igl::sort<Derived,Eigen::Matrix<double,-1,3,0,-1,3>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const Eigen::DenseBase<Derived> &,const int,const bool,Eigen::PlainObjectBase<Derived> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)”的引用
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
d:\documents\visualstudio2017\projects\mytest\include\igl\sort.cpp(168): warning C4244: “初始化”: 从“__int64”转换到“int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\sort.cpp(212): warning C4244: “初始化”: 从“__int64”转换到“int”，可能丢失数据
  d:\documents\visualstudio2017\projects\mytest\include\igl\sort.cpp(38): note: 参见对正在编译的函数 模板 实例化“void igl::sort3<Derived,Eigen::Matrix<double,-1,3,0,-1,3>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const Eigen::DenseBase<Derived> &,const int,const bool,Eigen::PlainObjectBase<Derived> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)”的引用
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
d:\documents\visualstudio2017\projects\mytest\include\igl\sort.cpp(214): warning C4244: “初始化”: 从“__int64”转换到“int”，可能丢失数据
d:\documents\visualstudio2017\projects\mytest\include\igl\parallel_for.h(133): warning C4018: “<”: 有符号/无符号不匹配
  d:\documents\visualstudio2017\projects\mytest\include\igl\parallel_for.h(109): note: 参见对正在编译的函数 模板 实例化“bool igl::parallel_for<Index,igl::parallel_for::<lambda_57c1fb299f4d3a60e1fe4f37bd616501>,igl::parallel_for::<lambda_86736efdc726e6938a75994c0c9eeb2b>,igl::parallel_for::<lambda_57c1fb299f4d3a60e1fe4f37bd616501>>(const Index,const PreFunctionType &,const FunctionType &,const AccumFunctionType &,const ::size_t)”的引用
          with
          [
              Index=Index,
              PreFunctionType=igl::parallel_for::<lambda_57c1fb299f4d3a60e1fe4f37bd616501>,
              FunctionType=igl::parallel_for::<lambda_86736efdc726e6938a75994c0c9eeb2b>,
              AccumFunctionType=igl::parallel_for::<lambda_57c1fb299f4d3a60e1fe4f37bd616501>
          ]
  d:\documents\visualstudio2017\projects\mytest\include\igl\doublearea.cpp(199): note: 参见对正在编译的函数 模板 实例化“bool igl::parallel_for<Index,igl::doublearea::<lambda_a9d8f00405db682869825b60418d6c92>>(const Index,const FunctionType &,const ::size_t)”的引用
          with
          [
              Index=Index,
              FunctionType=igl::doublearea::<lambda_a9d8f00405db682869825b60418d6c92>
          ]
    正在创建库 d:\Documents\VisualStudio2017\Projects\mytest\x64\Release\shortest way.lib 和对象 d:\Documents\VisualStudio2017\Projects\mytest\x64\Release\shortest way.exp
  正在生成代码
  2 of 12385 functions ( 0.0%) were compiled, the rest were copied from previous compilation.
    0 functions were new in current compilation
    10 functions had inline decision re-evaluated but remain unchanged
  已完成代码的生成
  shortest way.vcxproj -> d:\Documents\VisualStudio2017\Projects\mytest\x64\Release\shortest way.exe
